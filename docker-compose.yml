version: '3'

services:
  web:
    container_name: web
    restart: always
    build: .
    expose:
      - 8000
    env_file:
      - .env
    volumes:
      - .:/app1
      - static:/app/static

    depends_on:
      - postgres
      - redis
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000

#  tests:
#    container_name: tests
#    build:
#      context: .
#      dockerfile: ./Dockerfile-pytest
#    depends_on:
#      - postgres
#      - redis
#    env_file:
#      - ./.env
#    volumes:
#      - .:/tests


  postgres:
    container_name: postgres
    restart: always
    image: postgres:latest
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - db:/var/lib/postgresql/data

  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4
    restart: always
    env_file:
      - .env
    ports:
      - '5050:4444'
    volumes:
      - pgadmin:/var/lib/pgadmin

  redis:
      container_name: redis
      restart: unless-stopped
      image: redis:alpine
      ports:
          - '6379:6379'

  celery:
    container_name: celery
    build: .
    command: "celery -A config worker -l info"
    env_file:
      - .env
    depends_on:
      - redis
    restart: always

  celery_beat:
    build:
      context: ./
    command: ['celery', '-A', 'config', 'beat']
    volumes:
      - ./CarshowroomProject:/app
    depends_on:
      - redis
    env_file:
      - ./.env

  flower:
    build:
      context: .
    command: celery -A config flower
    volumes:
      - .:/app1
    depends_on:
      - redis
      - celery
    env_file:
      - ./.env
    ports:
      - "5555:5555"

#  nginx:
#    image: nginx:1.19.0-alpine
#    expose:
#      - 8080
#    ports:
#      - "80:8080"
#    volumes:
#      - /nginx_conf:/etc/nginx/conf.d/
#      - ./static:/static
#    depends_on:
#      - web
#    restart: always
  nginx:
    build: ./nginx
    ports:
      - '1337:80'
    volumes:
      - static:/app/static
    depends_on:
      - web
volumes:
  db:
  pgadmin:
  static: